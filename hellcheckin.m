
%{
Things to change:
1. When to run/collect data/plot old points
    a. run with no inputs -> plots old points
    b. run with input 'collect' or 1 or something -> collect points
    c. run with input 'onceaday' -> will only collect points once a day

2. remove the input changes within the function, create your own function
to be run
%}

function hellcheckin(collect_point,varargin)

%INPUTS:
% none: just shows you historical data
%   use case: hellcheckin
% collect_point=1: collects a point
%   use case: hellcheckin(1)
%
% Varargin:
% 'AxTitles': {north_title, south_title, east_title, west_title}
% 'Colormap': 256x3 colormap
% 'Colors': {figure color, axis color, text color, accent color}
% 'DaysBack': # of days back you want to see the historical data
% 'Directory': directory to save data (will automatically set to directory
%              this file is in. 
% 'FigNum': Number that the figure will be.
% 'FileName': File name data saved as. 
% 'FontName': Font that you want plot in (defaults to helvetica). type
%             listfonts into command window to see all of your system's
%             fonts
% 'SnapPoints': true/false, snaps the points to either the edge of grid 
%               cells or the middle of the grid cells
% 'OnceADay': if data has already been collected today it will not run
%
% recommended to put this in a startup.m file so it will run each time you
% open maltab.*
% 
% OUTPUTS (kind of):
% No actual outputs but will save your point to a txt file. Specify naming
% conventions and path in formatting section (IMPORTANT).
% If the file doesn't already exist a new one will be made. 
% Data is from -1 to +1, if entered correctly the negative emotion should
% correspond to a negative number and + to a positive emotion
% 
% FORMATTING:
% in the section below parse inputs you may change formatting for the
% figure to your liking. 
% You MUST change the file and directory details (second chunk)
% Most things are self explanatory. Here are the ones that aren't
%   snap_2nice_nums: will put points at intervals of 0.05 so it is on grid
%   or in between grid points. Turn this off so that your point goes
%   exactly where you click
%   days_back: the number of previous days you'd like to plot. So if it is
%   set to 7 it will plot points made within the last week, no matter how
%   many days you input data. 
% 
% RUNNING:
% When it is collecting a point  you can click around until you like its
% placement. Hit the enter key to lock it in. It will save your data and
% then plot historical data. 
% 
% *Notes on startup.m file:
% This file will run any time you open matlab
% place in the userpath folder (type userpath into command window to see
% correct folder).
% make sure the path to this funciton is defined within your startup.m file
% (use addpath())
% call this within that function with onceaday set to 1
% now this figure will come up once a day and collect a data point

%% parse inputs
args=varargin;

%set if not input
in_directory=false;
in_axtitles=false;
in_daysback=false;
in_fontname=false;
in_colormap=false;
in_fignum=false;
in_filename=false;
in_colors=false;

%Defaults
snap_2nice_nums=true;
onceaday=false;

%want it to run and plot historical data 
if ~exist("collect_point")
    collect_point=false;
end

%parse varargin
for i=1:2:numel(args)
    switch args{i}

        case 'AxTitles'
            tit_nsew=args{i+1};
            tit_north=tit_nsew{1};
            tit_south=tit_nsew{2};
            tit_east=tit_nsew{3};
            tit_west=tit_nsew{4};
            in_axtitles=true;

        case 'Colormap'
            cmp=args{i+1};
            in_colormap=true;   

        case 'Colors'
            colors=args{i+1};
            color_fig=colors{1};
            color_ax=colors{2};
            color_a1=colors{3}; %title, colorbar labels
            color_a2=colors{4}; %boarder, x-y labels            
            
        case 'DaysBack'
            days_back=args{i+1};
            in_daysback=true;

        case 'Directory'
            directory=args{i+1};
            in_directory=true;

        case 'FigNum'
            fig_num=args{i+1};
            in_fignum=true;  

         case 'FileName'
            file_name=args{i+1};
            in_filename=true;           
            
        case 'FontName'
            font_name=args{i+1};
            in_fontname=true;

        case 'SnapPoints'
            snap_2nice_nums=args{i+1};

        case 'OnceADay'
            onceaday=args{i+1};
    end
end

% -=- DEFAULTS -=-
if ~in_axtitles
    tit_west='Stressed';
    tit_east='At Ease';
    tit_south='Inadequate';
    tit_north='Capable';
end
if ~in_colormap;cmp=pretty_color_map;end
if ~in_colors
    color_fig='#FFCBC5';
    color_ax='#FFF5F2';
    color_a1='#5B516A'; %title, colorbar labels
    color_a2='#1A5C71'; %boarder, x-y labels
end
if ~in_daysback;days_back=7;end
if ~in_directory;directory=fileparts(which('hellcheckin.m'));end
if ~in_fignum;fig_num=80085;end
if ~in_filename;file_name=[tit_north '_' tit_south '_' tit_east '_' tit_west];end
if ~in_fontname;font_name='Helvetica';end

%% checking if file exists

%initialize
istoday=false;

%full file: directory, name, and file type
file = fullfile(directory,[file_name '.txt']);
if isfile(file) %exists
    newfile=false;
    
    %if user specifies it's only run once a day
    if onceaday
        %load data
        [~,~,datev]=loadmydata(file);
        istoday=sum(datev==datetime('today')+1);
    end

else %does not exist
    newfile=true;
end

if ~istoday %only runs if data wasn't collected already
%should make it so you can just look at the figure with old points

%% crete figure
fig=figure(fig_num);clf
fig.Color=color_fig;

%% format axes
ax=gca;hold on
ax.XLim=[-1,1];ax.YLim=ax.XLim;
ax.XAxisLocation='origin'; ax.YAxisLocation='origin';

%change colors
ax.Color=color_ax; %background
ax.XColor=color_a2;ax.YColor=color_a2;

%make it so there are 5 ticks on each side and don't have numners
ax.XTick=linspace(ax.XLim(1),ax.XLim(2),11);
ax.YTick=linspace(ax.YLim(1),ax.YLim(2),11);
ax.XTickLabel=[];ax.YTickLabel=[];
ax.TickDir='none';

%grid lines
grid on
ax.GridLineWidth=1;
daspect([1,1,1])
ax.Box='on';
ax.LineWidth=2;

%change the font
ax.FontName=font_name;
% pick points

%% axis labels
ylabel(tit_north)
ysecondarylabel(tit_south)
xlabel(tit_east)
xsecondarylabel(tit_west)

%% date today

%today's date
todays_date=datetime('today');

%make the title today
today_string=string(todays_date);
title(today_string,'FontSize',20,'FontName',font_name,'FontWeight','bold','Color',color_a1)

%% colors to make points
cin=round(linspace(1,256,days_back+1));
cvec=flip(cmp(cin,:));

%marker size
ms=30;

% make a colorbar now so it places things correctly
c=colorbar;
c.Visible='off';

%% Pick a point for today

if collect_point

zp=month(todays_date)+day(todays_date)*.01;

%while loop so you keep clicking until you like it, then hit enter
keepgoing=true;
delete_old_point=false;
while keepgoing

    %point clicked
    [xp,yp,button] = ginput(1);

    if button == 1 %spot was clicked

        %round it so that everything is a multiple of .5
        if snap_2nice_nums
        xp=round(xp/.1)*.1;
        yp=round(yp/.1)*.1;
        end
        
        %plot
        if delete_old_point
            ptp.Visible='off';
            ptp2.Visible='off';
        end
        ptp=plot3(xp,yp,zp,'.','Color',cvec(1,:),'LineWidth',1,'MarkerSize',ms);
        ptp2=plot3(xp,yp,zp,'o','Color',color_a1,'markersize',ms/3,'LineWidth',2);


        %save data
        north_south=yp;
        east_west=xp;

        %removes old point on the figure
        delete_old_point=true;

    else %enter key
        keepgoing=false;
    end
end

%%  Save data

%make into table and rename to category names
datatab=table(north_south,east_west,todays_date);
datatab=renamevars(datatab,'north_south',[tit_south '_' tit_north]);
datatab=renamevars(datatab,'east_west',[tit_west '_' tit_east]);

%saves as new file or appends to existing
if newfile
writetable(datatab,file)
else
writetable(datatab,file,'WriteMode','Append')
end
end


%% Plot old points

%load data
[nsv,ewv,datev]=loadmydata(file);

%choose points to plot
indx2plt=find(datev>=todays_date-days_back);

%find how many days ago it was
daysago=days(todays_date-datev)+1;

%plot old points
for i=1:numel(indx2plt)-1

    ypt=nsv(indx2plt(i));
    xpt=ewv(indx2plt(i));
    zpt=month(datev(indx2plt(i)))+day(datev(indx2plt(i)))*.01;
    cpt=cvec(daysago(indx2plt(i)),:);

    plot3(xpt,ypt,zpt,'.','Color',cpt,'markersize',ms)
    % plot3(xpt,ypt,zpt,'o','Color',color_a2,'markersize',ms/3,'LineWidth',2)
end

%% colorbar
c.Visible='on';
colormap(cvec)
c.TickDirection='none';
c.Color=color_a1;
c.Box='off';
c.LineWidth=.01;

ccc=linspace(0,1,days_back+2);
ccc=ccc(1:end-1)+(ccc(2)-ccc(1))/2;

%so it only shows 10 steps
%might need to check on this
if days_back>10
    cbar_step=round(days_back/10);
end

c.YDir='reverse';

c.Ticks=ccc(1:cbar_step:end);
c.TickLabels=string(datetime(todays_date-(0:cbar_step:days_back)','Format','MMM-dd'));

end %if ~istoday
































%% load data and convert into vectors
function [nsv,ewv,datev]=loadmydata(file)

    %load data
    warning('off','all') %sometimes gives a warning, suppress this
    saved_data=readtable(file);
    warning('on','all')

    %reformat into arrays
    nsv=table2array(saved_data(:,1));
    ewv=table2array(saved_data(:,2));
    datev=table2array(saved_data(:,3));

    %TEMPORARY: for testing
    datev=datev-flip(0:numel(datev)-1)';

end



%% Load Colormap
function cmp=pretty_color_map
%batlow colormap from fabio (https://www.fabiocrameri.ch/colourmaps/)
cmp=[0.00519315336708475	0.0982381170217676	0.349841880983090
0.00906521459033197	0.104486650830000	0.350933085197316
0.0129633498423289	0.110779224878689	0.351992436749182
0.0165299269497351	0.116913289721025	0.353069653004201
0.0199356188871784	0.122984609901344	0.354119746868454
0.0231887848608788	0.129035193731499	0.355182433139261
0.0262912532686106	0.135044376593309	0.356210177935776
0.0292454890230602	0.140963971261604	0.357238544408757
0.0320527839732752	0.146774163135912	0.358238809864577
0.0348531921361111	0.152558337015281	0.359232616710193
0.0374491201978731	0.158313029066941	0.360215873900476
0.0398450850777360	0.163977826354154	0.361187145320950
0.0421044814367400	0.169557025286014	0.362151350024456
0.0440693049392799	0.175052867458450	0.363083517221151
0.0459045417771884	0.180459981480988	0.364007138899386
0.0476649155211799	0.185844385257975	0.364914602704578
0.0493777105529435	0.191076094666705	0.365809773793078
0.0507949145357235	0.196274189099404	0.366684317829135
0.0521644226131999	0.201323109346684	0.367524428841208
0.0534706093172379	0.206357217316087	0.368370321541684
0.0547208190268049	0.211233639504389	0.369183918377723
0.0559279565486590	0.216046325684931	0.369973500721326
0.0570332028882937	0.220754403988698	0.370749959231427
0.0580321594013430	0.225339512774988	0.371508945759674
0.0591644472633139	0.229842355492485	0.372251954677445
0.0601669849066677	0.234299142105617	0.372978051781683
0.0610518529046847	0.238624975409339	0.373691483703879
0.0620599169455950	0.242887916136475	0.374386036006308
0.0630711885192822	0.247085184729684	0.375049762832502
0.0639820745627789	0.251213438784678	0.375708817893967
0.0649359959996455	0.255264117158115	0.376362234901568
0.0659026559009478	0.259256530407854	0.376987169456651
0.0668989649547362	0.263187670554759	0.377594356048644
0.0679212438224834	0.267055665502556	0.378191166020812
0.0690015399268030	0.270921699668860	0.378774197173502
0.0700008674222213	0.274712695402864	0.379342066130385
0.0711149701117089	0.278497078877772	0.379894940589927
0.0721923885222926	0.282248592366606	0.380434382371968
0.0734402187437269	0.285941575533513	0.380956848753049
0.0745947763196512	0.289653475822446	0.381452450979802
0.0758331623124643	0.293320808906070	0.381922126517139
0.0771357508667754	0.296995619889521	0.382376256175647
0.0785169378778106	0.300621632881116	0.382814141641971
0.0799840854978549	0.304252117282627	0.383223756484421
0.0815525013278468	0.307858398947125	0.383597551162593
0.0830821173021500	0.311460730613694	0.383936090789163
0.0847779568324857	0.315043268971781	0.384239590355774
0.0865028989040902	0.318615266713098	0.384505848643402
0.0883531961219220	0.322166995189381	0.384730717655105
0.0902813453275743	0.325685405250047	0.384910014366122
0.0923038345662409	0.329219762908387	0.385039657323954
0.0944621325131637	0.332711689708550	0.385115606684279
0.0966180953983236	0.336161465856160	0.385133810046371
0.0990153226719526	0.339620639680442	0.385090171722493
0.101480755034647	0.343035688614249	0.384980569900666
0.104077821755599	0.346409514371354	0.384800952154048
0.106841541789446	0.349774069058923	0.384547545072015
0.109695181374007	0.353098197886300	0.384217217250268
0.112654890581111	0.356390975995021	0.383807311871230
0.115748042999768	0.359638279019687	0.383310235526860
0.118991852267579	0.362848601476406	0.382712891968222
0.122320070854163	0.366030483139887	0.382025556899740
0.125889495809507	0.369159560333501	0.381259399105108
0.129518952789866	0.372238358207016	0.380377597748529
0.133297810364530	0.375281775760475	0.379395409526521
0.137212173177782	0.378282289735981	0.378314641676561
0.141259722724995	0.381239553276926	0.377134577676783
0.145432071146569	0.384130146115896	0.375839810714344
0.149706059211743	0.386975046435699	0.374448786739367
0.154072979351425	0.389777202392484	0.372933973477239
0.158619638274539	0.392530835576364	0.371320260101428
0.163245941707429	0.395237177909865	0.369608507927971
0.167951630443510	0.397889475832547	0.367784034279246
0.172787672226566	0.400496165799480	0.365867317891556
0.177752024232526	0.403041324318538	0.363832535446986
0.182731846300803	0.405550642267073	0.361713981220705
0.187885921978766	0.408003220140719	0.359484487681809
0.193050355701205	0.410427443381409	0.357176852635486
0.198309547040686	0.412797527139831	0.354766541010623
0.203676099618137	0.415116019613268	0.352252568634596
0.209075238896324	0.417412080725871	0.349676729645378
0.214554909630350	0.419661031462322	0.347018669461217
0.220111942181176	0.421864175365632	0.344261109633814
0.225707243707313	0.424049445907922	0.341459204900796
0.231362347685116	0.426197456679876	0.338572049835974
0.237074546074054	0.428324608187307	0.335634481269665
0.242794946494457	0.430418133914632	0.332634596088258
0.248616859952935	0.432492566839082	0.329571158670442
0.254452319480787	0.434529084592424	0.326434173200755
0.260319945017616	0.436556380462161	0.323285040958567
0.266241035594959	0.438555352552268	0.320085203327802
0.272168217501990	0.440541253895344	0.316830770603659
0.278171063633642	0.442524335472955	0.313551702114534
0.284174606048550	0.444483674290572	0.310242798678520
0.290213865609471	0.446420037368786	0.306889177342269
0.296294199927995	0.448356509675028	0.303509089730907
0.302378562769096	0.450281573721235	0.300122362136199
0.308516889183179	0.452204762073641	0.296720788822771
0.314648370646325	0.454107140492041	0.293278763181621
0.320833569484449	0.456005570229482	0.289840992989159
0.327006570466410	0.457900414083634	0.286376533387240
0.333234782454629	0.459794001605331	0.282937204577681
0.339469123417136	0.461684570316904	0.279467822860498
0.345703436907825	0.463562899460180	0.275998450804739
0.351976037887484	0.465440056873684	0.272492294570659
0.358277091996064	0.467331362982298	0.269036983963923
0.364589025519067	0.469213104510441	0.265543483460016
0.370922384955261	0.471085338923518	0.262063843644500
0.377291031991753	0.472951772989735	0.258587537352626
0.383675133410478	0.474841672577925	0.255131496487873
0.390070166278022	0.476710782507384	0.251664556748951
0.396504911340723	0.478587417929165	0.248212144421623
0.402967605546282	0.480465978482540	0.244731161613885
0.409454765503626	0.482350709505866	0.241313798016711
0.415967385249873	0.484225285540994	0.237894777416205
0.422506979897677	0.486112983045158	0.234493498355758
0.429094383235166	0.488010651505192	0.231096356758255
0.435713569399282	0.489890491285929	0.227728399647684
0.442365339127291	0.491795353922119	0.224353678892043
0.449051891060533	0.493684432905152	0.221073549514163
0.455773900006835	0.495584677469338	0.217774355148079
0.462538741140166	0.497497346294057	0.214517844643250
0.469368175929008	0.499392685496012	0.211317620055352
0.476220687033638	0.501314352620160	0.208148444319261
0.483122829727914	0.503216198592917	0.205037049710567
0.490081133151621	0.505136594492485	0.201976161402532
0.497088848407696	0.507057832521874	0.198994275130287
0.504153367630017	0.508983955224221	0.196118035888090
0.511253186366310	0.510897875843791	0.193295571616831
0.518424817377822	0.512821529411328	0.190566405015291
0.525636701573094	0.514746405949222	0.187989926724382
0.532906808622582	0.516661974445565	0.185496902271496
0.540225338801094	0.518584172104218	0.183099222034565
0.547599296242952	0.520485610989849	0.180883628832098
0.555023744351547	0.522390758806339	0.178853662681690
0.562506446632939	0.524292617548294	0.176964069665111
0.570015586601172	0.526185875241075	0.175272721455472
0.577582007537392	0.528058194677824	0.173774688233958
0.585199158336361	0.529926872028961	0.172493472198520
0.592846193316159	0.531776970655186	0.171448690985596
0.600520412080395	0.533604549074648	0.170647801037104
0.608239903972327	0.535423097233248	0.170104498494384
0.615972322327764	0.537231237632357	0.169826074668735
0.623739001449438	0.539001844691594	0.169813758961120
0.631512697958187	0.540752449196533	0.170074751850760
0.639300901131525	0.542483866873730	0.170622303627452
0.647098473551643	0.544182954477616	0.171464854861780
0.654888894169502	0.545862847313251	0.172602695966658
0.662691209538421	0.547502850994074	0.174044163645740
0.670477398725263	0.549126789966076	0.175746528376005
0.678243505790229	0.550711831816671	0.177802825410711
0.685995205397105	0.552274276389805	0.180056203495149
0.693719910578030	0.553796764464726	0.182610277409260
0.701421076466172	0.555294295332478	0.185478243682006
0.709097607851972	0.556771593938286	0.188546362965427
0.716731195805595	0.558204513846096	0.191850503593200
0.724322290027398	0.559627641979793	0.195408149901273
0.731877938729720	0.561010921925873	0.199173862870305
0.739392605793217	0.562385517773133	0.203179019446435
0.746850195448333	0.563725389331799	0.207374939680150
0.754268288129288	0.565033233370062	0.211760789638594
0.761628757046188	0.566343738524350	0.216321526909823
0.768941722425078	0.567630355382414	0.221045139381902
0.776207731549017	0.568898787886600	0.225930089339310
0.783415838135567	0.570161596146816	0.230961698180992
0.790568283235190	0.571420848091180	0.236160199836435
0.797665465624794	0.572681501867017	0.241490263423531
0.804709263453895	0.573927888846795	0.246955298638420
0.811692217707622	0.575186684436427	0.252571736058513
0.818610222189201	0.576461604502418	0.258303229839080
0.825472345165340	0.577725181624522	0.264196506762080
0.832272166340637	0.579025730038665	0.270211142571622
0.838999152138889	0.580339149102548	0.276353268138949
0.845656748806945	0.581671599511161	0.282630509220631
0.852246983560328	0.583037436845303	0.289035856039520
0.858747197113258	0.584440325581489	0.295572038544846
0.865168224245099	0.585881859215839	0.302254704311447
0.871505265841328	0.587351784832672	0.309111776029189
0.877741003724975	0.588873434015775	0.316081174486610
0.883877966446243	0.590449932568986	0.323194770875405
0.889899790503472	0.592086648665091	0.330454077502074
0.895809331360903	0.593765101077623	0.337865349822433
0.901590417725941	0.595507405444420	0.345428854490997
0.907241685560762	0.597318926380838	0.353142254701892
0.912746312508619	0.599191199682493	0.360986448703338
0.918102680428030	0.601125827044395	0.368998974004099
0.923299865924021	0.603137339971220	0.377138707117314
0.928323209153555	0.605212383814825	0.385404434335635
0.933175706334563	0.607368951118110	0.393816617129763
0.937849674298091	0.609581681420739	0.402345183479063
0.942331841620567	0.611867349277959	0.411006438364301
0.946611695477374	0.614218493687212	0.419767119099558
0.950696967300372	0.616648743833296	0.428624172180148
0.954573551941585	0.619137274240545	0.437582223436898
0.958244163144323	0.621671217829704	0.446603899411454
0.961696322763815	0.624282296685669	0.455701782243994
0.964942750866802	0.626934354666674	0.464859721022081
0.967982729410988	0.629639100041829	0.474057156935551
0.970804193451801	0.632393706113327	0.483289718951322
0.973423657364605	0.635182902901140	0.492546905562719
0.975835386415383	0.638011975507863	0.501826382179379
0.978052287886709	0.640868164755749	0.511089790326883
0.980079283639633	0.643751900534748	0.520349963396144
0.981917905342877	0.646663749521410	0.529602302530884
0.983573756671099	0.649590221767687	0.538818730668166
0.985065874290811	0.652521567389456	0.547998463772544
0.986392453598551	0.655470295277993	0.557141668501980
0.987566840654783	0.658421718521059	0.566226416094772
0.988595812218721	0.661377796372840	0.575264637293503
0.989496404073260	0.664328686022486	0.584246226821621
0.990267612607220	0.667280464185674	0.593173554163723
0.990925532131000	0.670230197500745	0.602030543003493
0.991478530188202	0.673164659342835	0.610835105106891
0.991935238397665	0.676090992100668	0.619575485571005
0.992304665888776	0.679007121942748	0.628251277539742
0.992594839158669	0.681913882824281	0.636869295694278
0.992813275081498	0.684815474522254	0.645423042472643
0.992967406324906	0.687705316026644	0.653934452071820
0.993064309969021	0.690578918653920	0.662398033887497
0.993110544115915	0.693451323340570	0.670810486709167
0.993112084992175	0.696313774520237	0.679177258725430
0.993074322158875	0.699160600185662	0.687519264553946
0.993002083925918	0.702006341467673	0.695831444091518
0.992899675706082	0.704851867039523	0.704114014480663
0.992770921338830	0.707689223019243	0.712380015783481
0.992619202458651	0.710530021624269	0.720638564250189
0.992447494132488	0.713365615877205	0.728891546190958
0.992258396286482	0.716209867269278	0.737145514689528
0.992054154948831	0.719048709991090	0.745402584216059
0.991836576730865	0.721892625512488	0.753673457847980
0.991607033345637	0.724754296276952	0.761958869328771
0.991366549730891	0.727613692845585	0.770269849230594
0.991115833119311	0.730489369759777	0.778605635319849
0.990855378663728	0.733373372400740	0.786975898906346
0.990585559732316	0.736264840378419	0.795370813995641
0.990306551045504	0.739184362483339	0.803809753453415
0.990018303653306	0.742102465640217	0.812285266175526
0.989720160546981	0.745039197717574	0.820804126943734
0.989410960122957	0.747997304183244	0.829372377625488
0.989089279344957	0.750968217876020	0.837978665307418
0.988754375957126	0.753949469054436	0.846627351215143
0.988406496921698	0.756948777951126	0.855332138030773
0.988046005695471	0.759963651782396	0.864077836621194
0.987671511546812	0.762995626474259	0.872864133480789
0.987279859025843	0.766046934110641	0.881698589155807
0.986867928115204	0.769104589172020	0.890572585146109
0.986434795246555	0.772184129460011	0.899492967252674
0.985980245354676	0.775272437375645	0.908448239797334
0.985503244682332	0.778377874999270	0.917444165900674
0.985002067963590	0.781495470778951	0.926467796812782
0.984473295836677	0.784624180752309	0.935531062128356
0.983912593600776	0.787756858655277	0.944626175150179
0.983321551197370	0.790905421152913	0.953748096972852
0.982702589047423	0.794067980575773	0.962895385102887
0.982047806881158	0.797227948415686	0.972070385807383
0.981353575300656	0.800406167147022	0.981266666045558];
end



end %function


